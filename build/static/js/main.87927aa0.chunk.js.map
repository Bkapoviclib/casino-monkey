{"version":3,"sources":["components/Sidebox.js","images/monkey.png","images/jungleBackground.png","images/chiploader.gif","images/jungleBackgroundFilter.png","components/ValidatorTest.js","components/StepOne.js","components/StepTwo.js","translation/i18n.js","images/titletransparent.png","images/croatia.png","images/united-kingdom.png","components/Success.js","components/App.js","index.js"],"names":["Sidebox","id","flattenObject","obj","flattened","Object","keys","forEach","key","assign","default_validators","defaultValidators","stepOne","stepTwo","index","data","length","push","console","log","stepSeparator","workedData","arrayData","map","element","value","validators","validator","values","parameters","code","checkValidatorType","filter","startsWith","name","email","emailValidator","result","Yup","required","i18next","t","matches","generateEmailValidator","passwordStrength","password","passwordMustMatch","oneOf","generatePasswordValidator","min","minLength","string","max","maxLength","lettersOnly","lettersOnlyValidator","generateStringValidator","generateYupSchema","res","JSON","stringify","StepOne","state","setState","step","nextStep","useTranslation","i18n","workedOnData","generatedSchema","schema","shape","useForm","resolver","yupResolver","shouldFocusError","mode","reValidateMode","register","handleSubmit","errors","formState","onSubmit","useState","isLoading","setIsLoading","className","src","monkey","loader","placeholder","defaultValue","as","backgroundImage","jungle","type","onClick","e","setTimeout","target","StepTwo","setIsSubmitting","prevStep","formattedData","formSchema","initialValues","jsonData","valueStr","dataType","of","newState","isSubmitting","form","href","resources","english","use","initReactI18next","init","lng","react","useSuspense","Success","setStep","App","watch","setFormState","formStateHandler","oldState","mergedState","useEffect","fields","field","formatDataForSending","Promise","resolve","reject","isValid","then","check","message","catch","err","objSchema","testSchema","title","changeLanguage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87927aa0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Sidebox() {\r\n    return (\r\n        <div id=\"side-text\">\r\n            <h1>REGISTRATION</h1>\r\n            <p>Register in two simple steps!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebox\r\n","export default __webpack_public_path__ + \"static/media/monkey.98706b61.png\";","export default __webpack_public_path__ + \"static/media/jungleBackground.4e6fea66.png\";","export default __webpack_public_path__ + \"static/media/chiploader.d8b975f5.gif\";","export default __webpack_public_path__ + \"static/media/jungleBackgroundFilter.84077283.png\";","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport React from \"react\";\r\nimport data from \"../data/data.json\";\r\nimport defaultValidators from \"../data/default_validators.json\";\r\nimport * as Yup from \"yup\";\r\nimport i18next from \"i18next\";\r\n\r\nexport const flattenObject = (obj) => {\r\n  const flattened = {};\r\n\r\n  Object.keys(obj).forEach((key) => {\r\n    if (typeof obj[key] === \"object\" && obj[key] !== null) {\r\n      Object.assign(flattened, flattenObject(obj[key]));\r\n    } else {\r\n      flattened[key] = obj[key];\r\n    }\r\n  });\r\n\r\n  return flattened;\r\n};\r\nconst default_validators = defaultValidators;\r\nconst stepOne = [];\r\nconst stepTwo = [];\r\nconst stepSeparator = () => {\r\n  for (let index = 0; index < data.length; index++) {\r\n    if (index < 3) {\r\n      stepOne.push(data[index]);\r\n    } else {\r\n      stepTwo.push(data[index]);\r\n    }\r\n  }\r\n  console.log(\"step one: \", stepOne, \"step two: \", stepTwo);\r\n};\r\nstepSeparator();\r\nlet stepOneData = stepOne;\r\nlet stepTwoData = stepTwo;\r\n\r\nconst mergeValidators = (element) => {};\r\n\r\n\r\n  let arrayData = [...stepOneData];\r\nexport const workedData =(arrayData)=>{\r\n  let res = {}\r\n  res = arrayData.map((element) => {\r\n  console.log(\"initial element being worked: \", element)\r\n    let value = element?.validators?.map((validator) => ({\r\n      [validator.key]: Object.values(validator?.parameters)[0],\r\n    }));\r\n    console.log(\"preSPREAD value: \",value)\r\n    value = { ...value };\r\n    console.log(\"preFLAT value: \" , value)\r\n    value = flattenObject(value);\r\n\r\n    console.log(\"code: \",element.code,\"value: \",value)\r\n    return {\r\n      [element.code]: value,\r\n    };\r\n  })\r\nreturn res;\r\n};\r\n\r\n   export const generatePasswordValidator = (element) => {\r\n    let name = Object.keys(element)[0];\r\n    let validator = {\r\n      passwordStrength: element[name]?.passwordStrength || default_validators.password.passwordStrength,\r\n      passwordMustMatch: element[name]?.passwordMustMatch|| default_validators.password.passwordMustMatch\r\n    };\r\n    let result = {\r\n      [Object.keys(\r\n        element\r\n      )[0]]: Yup.string().required(i18next.t(`errors.${name}.required`)).matches(validator.passwordStrength,\"At least 8 characters, one uppercase, one lowercase, one special(#,$,% etc)\").oneOf([Yup.ref(\"password\"),null],\"PASSWORD MUST MATCH\")\r\n    };\r\n    console.log(result);\r\n    return result;\r\n   };\r\n  export const generateEmailValidator = (element) => {\r\n    let name = Object.keys(element)[0];\r\n    let validator = {\r\n      email: element[name]?.emailValidator || default_validators.emailValidator.email,\r\n    };\r\n    let result = {\r\n      [Object.keys(\r\n        element\r\n      )[0]]: Yup.string().required(i18next.t(`errors.${name}.required`)).matches(validator.email,i18next.t(\"errors.fname.letters_only\"))\r\n    };\r\n    console.log(result);\r\n    return result;\r\n  };\r\n\r\n  export const generateStringValidator = (element) => {\r\n    console.log(\"INSIDE STRING VALIDATOR\");\r\n    let name = Object.keys(element)[0];\r\n    let validator = {\r\n      min: element[name]?.minLength || default_validators.string.length.min,\r\n      max: element[name]?.maxLength || default_validators.string.length.max,\r\n      lettersOnly: element[name]?.lettersOnlyValidator || default_validators.string.lettersOnly\r\n    };\r\n    let result = {\r\n      [Object.keys(\r\n        element\r\n      )[0]]: Yup.string().required(i18next.t(`errors.${name}.required`)).min(`${validator.min}`).max(`${validator.max}`).matches(validator.lettersOnly,i18next.t(\"errors.fname.letters_only\"))\r\n    };\r\n    console.log(result);\r\n    return result;\r\n  };\r\n\r\n  export const checkValidatorType = (element) => {\r\n    if (Object.keys(element).filter((key) => key.startsWith(\"email\")).length) {\r\n      console.log(\"WENT INTO EMAIL\");\r\n      return generateEmailValidator(element);\r\n    } else if (\r\n      Object.keys(element).filter((key) => key.startsWith(\"password\")).length\r\n    ) {\r\n      return generatePasswordValidator(element);\r\n    } else {\r\n      console.log(\"ELSE TRIGGERED\");\r\n      return generateStringValidator(element);\r\n    }\r\n  };\r\n\r\n  let a = [\r\n    { fname: { minLength: { targetLength: 2 } } },\r\n    { fname: { maxLength: { targetLength: 25 } } },\r\n  ];\r\n\r\n  export const generateYupSchema = (data) => {\r\n    let res = {};\r\n    let arr = data.map((element) => {\r\n      console.log(\"ELEMENT BEFORE PASSING TO CHECK: \", JSON.stringify(element));\r\n      return checkValidatorType(element);\r\n    });\r\n    arr.forEach((element) => (res = { ...res, ...element }));\r\n    return res;\r\n  };\r\n\r\n\r\n\r\n \r\n\r\n\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Sidebox from \"./Sidebox\";\r\nimport monkey from \"../images/monkey.png\";\r\nimport jungle from \"../images/jungleBackground.png\";\r\nimport loader from \"../images/chiploader.gif\"\r\nimport jungleFilter from \"../images/jungleBackgroundFilter.png\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport {generateYupSchema,generateEmailValidator,generatePasswordValidator,generateStringValidator,flattenObject,workedData,checkValidatorType} from './ValidatorTest'\r\n\r\n//First step of the form, takes data from the stepOne array\r\n// to dynamically generate input elements and labels\r\nfunction StepOne({ data, state, setState, step, nextStep }) {\r\n  //initiate translation variables\r\n  const { t, i18n } = useTranslation();\r\n\r\n  let arrayData = [...data]\r\n \r\n  let workedOnData = workedData(arrayData)\r\n\r\n  let generatedSchema ={...generateYupSchema(workedOnData)}\r\n\r\n  let schema = Yup.object()\r\n    .shape(generatedSchema)\r\n    .required();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    \r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(schema),shouldFocusError:true,mode:\"onBlur\", reValidateMode:\"onSubmit\"});\r\n  const onSubmit = (values) => {\r\n    console.log(\"onSubmit values: \", values);\r\n    setState(state, values);\r\n    console.log(state);\r\n    nextStep(step)\r\n  };\r\n\r\n  const [isLoading,setIsLoading] = useState(false)\r\n  \r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <img className=\"monkey-img\" src={monkey} />\r\n      {isLoading?<div className=\"loader\"><img  src={loader}/>LOADING...</div>:<form>\r\n        {data.map((element) => (\r\n          <div id=\"input-div\" key={element.code}>\r\n            <label>{t(`labels.${element.code}`)}</label>\r\n            <input \r\n              placeholder={t(`labels.${element.code}`)}\r\n              {...register(element.code, { required: \"req\" })}\r\n              defaultValue={state[element.code]}\r\n            />\r\n           \r\n              <ErrorMessage as=\"span\" errors={errors} name={element.code} />\r\n            \r\n          </div>\r\n        ))}\r\n      </form>}\r\n      <div id=\"sidebar-container\" backgroundImage={jungle}>\r\n        <Sidebox />\r\n\r\n        <button\r\n          id=\"next-button\r\n          \"\r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {setIsLoading(false);handleSubmit(onSubmit)(e.target.value)}, 1000);\r\n            \r\n            \r\n          }}\r\n        >\r\n          {t(\"buttons.forwardButton\")}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepOne;\r\n","import { useForm } from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport jsonData from \"../data/data.json\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport monkey from \"../images/monkey.png\";\r\nimport jungle from \"../images/jungleBackground.png\";\r\nimport jungleFilter from \"../images/jungleBackgroundFilter.png\";\r\nimport Sidebox from \"./Sidebox\";\r\nimport {generateYupSchema,generateEmailValidator,generatePasswordValidator,generateStringValidator,flattenObject,workedData,checkValidatorType} from './ValidatorTest'\r\nimport loader from \"../images/chiploader.gif\"\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Second step of the form, takes data from the stepTwo array\r\n// to dynamically generate input elements and labels\r\n\r\nfunction StepTwo({\r\n  setIsSubmitting,\r\n  data,\r\n  state,\r\n  setState,\r\n  step,\r\n  prevStep,\r\n  formattedData,\r\n}) {\r\n  const [isLoading,setIsLoading] = useState(false)\r\n  const { t, i18n } = useTranslation();\r\n \r\n  let arrayData = [...data]\r\n \r\n  let workedOnData = workedData(arrayData)\r\n\r\n  let generatedSchema ={...generateYupSchema(workedOnData)}\r\n\r\n  let formSchema = Yup.object()\r\n    .shape(generatedSchema)\r\n    .required();\r\n\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(formSchema) });\r\n  //grab names and default values from json data\r\n  let initialValues = [];\r\n  jsonData.map((element) =>\r\n    initialValues.push({\r\n      code: element[\"code\"],\r\n      valueStr: \"\",\r\n      dataType: \"string\",\r\n    })\r\n  );\r\n  console.log(initialValues);\r\n\r\n  const schema = Yup.array().of(\r\n    Yup.object().shape({\r\n      code: Yup.string().required(),\r\n      valueStr: Yup.string().required(),\r\n      dataType: Yup.string().required(),\r\n    })\r\n  );\r\n\r\n  const submitRegistration = (fields) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        schema.isValid(fields).then((check) => {\r\n          if (check) {\r\n            resolve(fields);\r\n          } else {\r\n            reject({ message: \"Error\" });\r\n          }\r\n        });\r\n      }, 1000);\r\n    });\r\n  };\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    const newState = { ...state, ...values };\r\n    setState(newState);\r\n    setIsSubmitting((isSubmitting) => !isSubmitting);\r\n  };\r\n  const onBack = (values) => {\r\n    setIsLoading(true)\r\n    setTimeout(() => {prevStep(step);setIsLoading(false);setState(state, values)}, 1000)\r\n    ;\r\n\r\n    return false;\r\n  };\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <img className=\"monkey-img\" src={monkey} />\r\n    {isLoading?<div className=\"loader\"><img  src={loader}/>LOADING...</div>:\r\n      <form id=\"register\" onSubmit={handleSubmit(onSubmit)}>\r\n        {data.map((element) => (\r\n          <div id=\"input-div\" key={element.code}>\r\n            <label>{t(`labels.${element.code}`)}</label>\r\n            <input  placeholder={t(`labels.${element.code}`)} {...element.code.startsWith(\"password\") ? {type:\"password\"} : {}}\r\n              defaultValue={state[element.code]}\r\n              {...register(element.code)}\r\n              name={element.code}\r\n            />\r\n           \r\n              <ErrorMessage as=\"span\" errors={errors} name={element.code} />\r\n            \r\n          </div>\r\n        ))}\r\n      </form>}\r\n      <div id=\"sidebar-container\">\r\n        <Sidebox />\r\n        <div id=\"terms\">\r\n          <input form=\"register\" type=\"checkbox\" required=\"true\" />\r\n          {t(\"terms.text\")}\r\n          <a\r\n            href=\"https://www.termsfeed.com/live/9ab59656-a7af-4080-8701-c88149727a24\"\r\n            target=\"_blank\"\r\n          >\r\n            {t(\"terms.link\")}\r\n          </a>\r\n        </div>\r\n        <button\r\n        id=\"back-button\r\n        \"\r\n          onClick={(e) => {\r\n            onBack(e.target.value)\r\n            \r\n          }}\r\n        >\r\n          {t(\"buttons.backButton\")}\r\n        </button>\r\n        <button id=\"register-button\r\n        \" \r\n        form=\"register\" type=\"submit\">\r\n        \r\n          {t(\"buttons.submitButton\")}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepTwo;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport english from './translate.json'\r\n\r\n\r\nconst resources = {\r\n    ...english\r\n}\r\ni18n.use(initReactI18next).init({\r\n    resources, lng:\"hr\",\r\n    react:{useSuspense:false}\r\n})\r\n\r\nexport default i18n;\r\n","export default __webpack_public_path__ + \"static/media/titletransparent.bb9e6147.png\";","export default __webpack_public_path__ + \"static/media/croatia.605fdc1b.png\";","export default __webpack_public_path__ + \"static/media/united-kingdom.175654fa.png\";","import React from 'react'\r\n\r\nfunction Success({step,setStep}) {\r\n    return (\r\n        <div id=\"success-div\">\r\n            REGISTRATION COMPLETE!!!\r\n            <button onClick={setStep}>RESET FORM</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Success\r\n","import React from \"react\";\r\nimport jsonData from \"../data/data.json\";\r\nimport translate from \"../translation/translate.json\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport i18n from \"../translation/i18n\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport monkey from \"../images/monkey.png\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport title from '../images/titletransparent.png'\r\nimport croatia from '../images/croatia.png'\r\nimport english from '../images/united-kingdom.png'\r\nimport Success from \"./Success\";\r\nfunction App() {\r\n  const { t, i18n } = useTranslation();\r\n  //initialize react-hook-form variables\r\n  const { register, handleSubmit, watch } = useForm();\r\n  console.log(watch(\"First Name\"));\r\n  //set initial state for step\r\n  const [step, setStep] = useState(1);\r\n  //form state\r\n  const [isloading,setIsLoading] = useState(true)\r\n  const [formState, setFormState] = useState({});\r\n  const formStateHandler = (oldState, newState) => {\r\n    let mergedState = { ...oldState, ...newState };\r\n    setFormState(() => mergedState);\r\n  };\r\n  //\r\n  const formatDataForSending = (data) => {\r\n    let formattedData = initialValues.map((field) => {\r\n      field.valueStr = data[field[\"code\"]];\r\n      return field;\r\n    });\r\n    return (formattedData = [...formattedData]);\r\n  };\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const submitRegistration = (fields) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        schema.isValid(fields).then((check) => {\r\n          if (check) {\r\n            resolve(fields);\r\n          } else {\r\n            reject({ message: \"Error\" });\r\n          }\r\n        });\r\n      }, 1000);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    let formattedData = formatDataForSending(formState);\r\n    console.log(\"formatted data: \", formattedData);\r\n    if (isSubmitting == true) {\r\n      submitRegistration(formattedData)\r\n        .then((res) => {\r\n          \r\n          nextStep(step);\r\n          \r\n          setIsSubmitting((isSubmitting) => !isSubmitting);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [isSubmitting]);\r\n  //Yup schema for validation\r\n  let objSchema = Yup.object().shape({\r\n    code: Yup.string().required(),\r\n    valueStr: Yup.string().required(),\r\n    dataType: Yup.string().required(),\r\n  });\r\n  let schema = Yup.array().of(objSchema);\r\n  let testSchema = [{ valueStr: \"testName\", dataType: \"string\" }];\r\n\r\n  /*useEffect(() => {\r\n    if (step == 0) {\r\n      nextStep(step);\r\n    } \r\n    else if (step == 1) {\r\n      nextStep(step)\r\n    }\r\n    else if (step ==2 && isSubmitting){\r\n      nextStep(step)}\r\n    else {\r\n      prevStep(step);\r\n    }\r\n  }, [formState]); */\r\n\r\n  schema.isValid(testSchema).then((res) => {\r\n    console.log(res, testSchema);\r\n  });\r\n\r\n  //separate json data into 2 steps\r\n  const stepOne = [];\r\n  const stepTwo = [];\r\n  const stepSeparator = () => {\r\n    for (let index = 0; index < jsonData.length; index++) {\r\n      if (index < 3) {\r\n        stepOne.push(jsonData[index]);\r\n      } else {\r\n        stepTwo.push(jsonData[index]);\r\n      }\r\n    }\r\n    console.log(\"step one: \", stepOne, \"step two: \", stepTwo);\r\n  };\r\n\r\n  stepSeparator();\r\n  //grab names and default values from json data\r\n  let initialValues = [];\r\n  jsonData.map((element) =>\r\n    initialValues.push({\r\n      code: element[\"code\"],\r\n      valueStr: \"\",\r\n      dataType: \"string\",\r\n    })\r\n  );\r\n  console.log(initialValues);\r\n\r\n  //handlers for setting step state\r\n  const nextStep = () => {\r\n    setStep(step + 1);\r\n  };\r\n  const prevStep = () => {\r\n    setStep(step - 1);\r\n  };\r\n  const resetStep = () =>{\r\n    setStep(1)\r\n  }\r\n  //updating state on step change\r\n  const updateState = () => {};\r\n\r\n  return (\r\n    <div>\r\n    \r\n    <div id=\"app-container\">\r\n    \r\n      <header>\r\n      <img className=\"title-img\" src={title} />\r\n        <div id=\"language-buttons\">\r\n        \r\n          <button onClick={() => i18n.changeLanguage(\"en\")}>\r\n            {t(\"buttons.englishButton\")}\r\n          </button>\r\n          <button onClick={() => i18n.changeLanguage(\"hr\")}>\r\n            {t(\"buttons.croatianButton\")}\r\n          </button>\r\n        </div>\r\n      </header>\r\n      <div id=\"step-container\">\r\n        {step == 1 ? (\r\n          <StepOne\r\n            step={step}\r\n            nextStep={nextStep}\r\n            state={formState}\r\n            setState={formStateHandler}\r\n            data={stepOne}\r\n          />\r\n        ) :step==2 ? (\r\n          <StepTwo\r\n            setIsSubmitting={setIsSubmitting}\r\n            step={step}\r\n            prevStep={prevStep}\r\n            state={formState}\r\n            setState={formStateHandler}\r\n            data={stepTwo}\r\n          />\r\n        ) : (<Success step={step} setStep={resetStep}></Success>)\r\n\r\n        }\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport i18n from './translation/i18n';\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}