{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Borna\\\\Desktop\\\\TEST GIT\\\\casino-monkey-final\\\\src\\\\components\\\\StepTwo.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport React from \"react\";\nimport jsonData from \"../data/data.json\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nimport monkey from \"../images/monkey.png\";\nimport Sidebox from \"./Sidebox\";\nimport { generateYupSchema, workedData } from \"./ValidatorTest\";\nimport loader from \"../images/chiploader.gif\";\nimport { useState } from \"react\"; //Second step of the form, takes data from the stepTwo array\n// to dynamically generate input elements and labels\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StepTwo({\n  setIsSubmitting,\n  data,\n  state,\n  setState,\n  step,\n  prevStep,\n  formattedData\n}) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  let arrayData = [...data];\n  let workedOnData = workedData(arrayData);\n  let generatedSchema = { ...generateYupSchema(workedOnData)\n  };\n  let formSchema = Yup.object().shape(generatedSchema).required();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(formSchema),\n    shouldFocusError: true,\n    mode: \"onBlur\",\n    reValidateMode: \"onSubmit\"\n  }); //grab names and default values from json data\n\n  let initialValues = [];\n  jsonData.map(element => initialValues.push({\n    code: element[\"code\"],\n    valueStr: \"\",\n    dataType: \"string\"\n  }));\n  console.log(initialValues);\n  const schema = Yup.array().of(Yup.object().shape({\n    code: Yup.string().required(),\n    valueStr: Yup.string().required(),\n    dataType: Yup.string().required()\n  }));\n\n  const submitRegistration = fields => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        schema.isValid(fields).then(check => {\n          if (check) {\n            resolve(fields);\n          } else {\n            reject({\n              message: \"Error\"\n            });\n          }\n        });\n      }, 1000);\n    });\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n    const newState = { ...state,\n      ...values\n    };\n    setState(newState);\n    setIsSubmitting(isSubmitting => !isSubmitting);\n  };\n\n  const onBack = values => {\n    setIsLoading(true);\n    setTimeout(() => {\n      prevStep(step);\n      setIsLoading(false);\n      setState(state, values);\n    }, 1000);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"monkey-img\",\n      src: monkey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), \"LOADING...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"register\",\n      onSubmit: handleSubmit(onSubmit),\n      children: data.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: t(`labels.${element.code}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: t(`labels.${element.code}`),\n          ...(element.code.startsWith(\"password\") ? {\n            type: \"password\"\n          } : {}),\n          defaultValue: state[element.code],\n          ...register(element.code),\n          name: element.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          as: \"span\",\n          errors: errors,\n          name: element.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, element.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sidebar-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"terms\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          form: \"register\",\n          type: \"checkbox\",\n          required: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), t(\"terms.text\"), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.termsfeed.com/live/9ab59656-a7af-4080-8701-c88149727a24\",\n          target: \"_blank\",\n          children: t(\"terms.link\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"back-button\\r \",\n        onClick: e => {\n          onBack(e.target.value);\n        },\n        children: t(\"buttons.backButton\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"register-button\\r \",\n        form: \"register\",\n        type: \"submit\",\n        children: t(\"buttons.submitButton\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StepTwo, \"cLBXxxe99siwga0P3IxiUDwHcnU=\", false, function () {\n  return [useTranslation, useForm];\n});\n\n_c = StepTwo;\nexport default StepTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepTwo\");","map":{"version":3,"sources":["C:/Users/Borna/Desktop/TEST GIT/casino-monkey-final/src/components/StepTwo.js"],"names":["useForm","React","jsonData","ErrorMessage","yupResolver","Yup","useTranslation","monkey","Sidebox","generateYupSchema","workedData","loader","useState","StepTwo","setIsSubmitting","data","state","setState","step","prevStep","formattedData","isLoading","setIsLoading","t","arrayData","workedOnData","generatedSchema","formSchema","object","shape","required","register","handleSubmit","formState","errors","resolver","shouldFocusError","mode","reValidateMode","initialValues","map","element","push","code","valueStr","dataType","console","log","schema","array","of","string","submitRegistration","fields","Promise","resolve","reject","setTimeout","isValid","then","check","message","onSubmit","values","newState","isSubmitting","onBack","startsWith","type","e","target","value"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport jsonData from \"../data/data.json\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport monkey from \"../images/monkey.png\";\r\nimport Sidebox from \"./Sidebox\";\r\nimport { generateYupSchema, workedData } from \"./ValidatorTest\";\r\nimport loader from \"../images/chiploader.gif\";\r\nimport { useState } from \"react\";\r\n\r\n//Second step of the form, takes data from the stepTwo array\r\n// to dynamically generate input elements and labels\r\n\r\nfunction StepTwo({\r\n  setIsSubmitting,\r\n  data,\r\n  state,\r\n  setState,\r\n  step,\r\n  prevStep,\r\n  formattedData,\r\n}) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  let arrayData = [...data];\r\n\r\n  let workedOnData = workedData(arrayData);\r\n\r\n  let generatedSchema = { ...generateYupSchema(workedOnData) };\r\n\r\n  let formSchema = Yup.object().shape(generatedSchema).required();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(formSchema),\r\n    shouldFocusError: true,\r\n    mode: \"onBlur\",\r\n    reValidateMode: \"onSubmit\",\r\n  });\r\n  //grab names and default values from json data\r\n  let initialValues = [];\r\n  jsonData.map((element) =>\r\n    initialValues.push({\r\n      code: element[\"code\"],\r\n      valueStr: \"\",\r\n      dataType: \"string\",\r\n    })\r\n  );\r\n  console.log(initialValues);\r\n\r\n  const schema = Yup.array().of(\r\n    Yup.object().shape({\r\n      code: Yup.string().required(),\r\n      valueStr: Yup.string().required(),\r\n      dataType: Yup.string().required(),\r\n    })\r\n  );\r\n\r\n  const submitRegistration = (fields) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        schema.isValid(fields).then((check) => {\r\n          if (check) {\r\n            resolve(fields);\r\n          } else {\r\n            reject({ message: \"Error\" });\r\n          }\r\n        });\r\n      }, 1000);\r\n    });\r\n  };\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    const newState = { ...state, ...values };\r\n    setState(newState);\r\n    setIsSubmitting((isSubmitting) => !isSubmitting);\r\n  };\r\n  const onBack = (values) => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      prevStep(step);\r\n      setIsLoading(false);\r\n      setState(state, values);\r\n    }, 1000);\r\n\r\n    return false;\r\n  };\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <img className=\"monkey-img\" src={monkey} />\r\n      {isLoading ? (\r\n        <div className=\"loader\">\r\n          <img src={loader} />\r\n          LOADING...\r\n        </div>\r\n      ) : (\r\n        <form id=\"register\" onSubmit={handleSubmit(onSubmit)}>\r\n          {data.map((element) => (\r\n            <div id=\"input-div\" key={element.code}>\r\n              <label>{t(`labels.${element.code}`)}</label>\r\n              <input\r\n                placeholder={t(`labels.${element.code}`)}\r\n                {...(element.code.startsWith(\"password\")\r\n                  ? { type: \"password\" }\r\n                  : {})}\r\n                defaultValue={state[element.code]}\r\n                {...register(element.code)}\r\n                name={element.code}\r\n              />\r\n\r\n              <ErrorMessage as=\"span\" errors={errors} name={element.code} />\r\n            </div>\r\n          ))}\r\n        </form>\r\n      )}\r\n      <div id=\"sidebar-container\">\r\n        <Sidebox />\r\n        <div id=\"terms\">\r\n          <input form=\"register\" type=\"checkbox\" required=\"true\" />\r\n          {t(\"terms.text\")}\r\n          <a\r\n            href=\"https://www.termsfeed.com/live/9ab59656-a7af-4080-8701-c88149727a24\"\r\n            target=\"_blank\"\r\n          >\r\n            {t(\"terms.link\")}\r\n          </a>\r\n        </div>\r\n        <button\r\n          id=\"back-button\r\n        \"\r\n          onClick={(e) => {\r\n            onBack(e.target.value);\r\n          }}\r\n        >\r\n          {t(\"buttons.backButton\")}\r\n        </button>\r\n        <button\r\n          id=\"register-button\r\n        \"\r\n          form=\"register\"\r\n          type=\"submit\"\r\n        >\r\n          {t(\"buttons.submitButton\")}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepTwo;\r\n"]},"metadata":{},"sourceType":"module"}