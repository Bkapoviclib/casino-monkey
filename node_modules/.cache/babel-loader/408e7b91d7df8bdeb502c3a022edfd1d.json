{"ast":null,"code":"import data from \"../data/data.json\";\nimport defaultValidators from \"../data/default_validators.json\";\nimport * as Yup from \"yup\";\nimport i18next from \"i18next\";\nexport const flattenObject = obj => {\n  const flattened = {};\n  Object.keys(obj).forEach(key => {\n    if (typeof obj[key] === \"object\" && obj[key] !== null) {\n      Object.assign(flattened, flattenObject(obj[key]));\n    } else {\n      flattened[key] = obj[key];\n    }\n  });\n  return flattened;\n};\nconst default_validators = defaultValidators;\nconst stepOne = [];\nconst stepTwo = [];\n\nconst stepSeparator = () => {\n  for (let index = 0; index < data.length; index++) {\n    if (index < 3) {\n      stepOne.push(data[index]);\n    } else {\n      stepTwo.push(data[index]);\n    }\n  }\n\n  console.log(\"step one: \", stepOne, \"step two: \", stepTwo);\n};\n\nexport const workedData = arrayData => {\n  let res = {};\n  res = arrayData.map(element => {\n    var _element$validators;\n\n    console.log(\"initial element being worked: \", element);\n    let value = element === null || element === void 0 ? void 0 : (_element$validators = element.validators) === null || _element$validators === void 0 ? void 0 : _element$validators.map(validator => ({\n      [validator.key]: Object.values(validator === null || validator === void 0 ? void 0 : validator.parameters)[0]\n    }));\n    console.log(\"preSPREAD value: \", value);\n    value = { ...value\n    };\n    console.log(\"preFLAT value: \", value);\n    value = flattenObject(value);\n    console.log(\"code: \", element.code, \"value: \", value);\n    return {\n      [element.code]: value\n    };\n  });\n  return res;\n};\nexport const generatePasswordValidator = element => {\n  var _element$name, _element$name2;\n\n  let name = Object.keys(element)[0];\n  let validator = {\n    passwordStrength: ((_element$name = element[name]) === null || _element$name === void 0 ? void 0 : _element$name.passwordStrength) || default_validators.password.passwordStrength,\n    passwordMustMatch: ((_element$name2 = element[name]) === null || _element$name2 === void 0 ? void 0 : _element$name2.passwordMustMatch) || default_validators.password.passwordMustMatch\n  };\n  let result = {\n    [Object.keys(element)[0]]: Yup.string().required(i18next.t(`errors.${name}.required`)).matches(validator.passwordStrength, i18next.t(`errors.password.passwordStrength`)).oneOf([Yup.ref(\"password\"), null], i18next.t(`errors.password.passwordMatch`))\n  };\n  console.log(result);\n  return result;\n};\nexport const generateEmailValidator = element => {\n  var _element$name3;\n\n  let name = Object.keys(element)[0];\n  let validator = {\n    email: ((_element$name3 = element[name]) === null || _element$name3 === void 0 ? void 0 : _element$name3.emailValidator) || default_validators.emailValidator.email\n  };\n  let result = {\n    [Object.keys(element)[0]]: Yup.string().required(i18next.t(`errors.${name}.required`)).matches(validator.email, i18next.t(\"errors.email.email\"))\n  };\n  console.log(result);\n  return result;\n};\nexport const generateStringValidator = element => {\n  var _element$name4, _element$name5, _element$name6;\n\n  console.log(\"INSIDE STRING VALIDATOR\");\n  let name = Object.keys(element)[0];\n  let validator = {\n    min: ((_element$name4 = element[name]) === null || _element$name4 === void 0 ? void 0 : _element$name4.minLength) || default_validators.string.length.min,\n    max: ((_element$name5 = element[name]) === null || _element$name5 === void 0 ? void 0 : _element$name5.maxLength) || default_validators.string.length.max,\n    lettersOnly: ((_element$name6 = element[name]) === null || _element$name6 === void 0 ? void 0 : _element$name6.lettersOnlyValidator) || default_validators.string.lettersOnly\n  };\n  let result = {\n    [Object.keys(element)[0]]: Yup.string().required(i18next.t(`errors.${name}.required`)).min(`${validator.min}`, i18next.t(`errors.${name}.minLength`)).max(`${validator.max}`, i18next.t(`errors.${name}.maxLength`)).matches(validator.lettersOnly, i18next.t(\"errors.fname.letters_only\"))\n  };\n  console.log(result);\n  return result;\n};\nexport const checkValidatorType = element => {\n  if (Object.keys(element).filter(key => key.startsWith(\"email\")).length) {\n    console.log(\"WENT INTO EMAIL\");\n    return generateEmailValidator(element);\n  } else if (Object.keys(element).filter(key => key.startsWith(\"password\")).length) {\n    return generatePasswordValidator(element);\n  } else {\n    console.log(\"ELSE TRIGGERED\");\n    return generateStringValidator(element);\n  }\n};\nlet a = [{\n  fname: {\n    minLength: {\n      targetLength: 2\n    }\n  }\n}, {\n  fname: {\n    maxLength: {\n      targetLength: 25\n    }\n  }\n}];\nexport const generateYupSchema = data => {\n  let res = {};\n  let arr = data.map(element => {\n    console.log(\"ELEMENT BEFORE PASSING TO CHECK: \", JSON.stringify(element));\n    return checkValidatorType(element);\n  });\n  arr.forEach(element => res = { ...res,\n    ...element\n  });\n  return res;\n};","map":{"version":3,"sources":["C:/Users/Borna/Desktop/TEST GIT/casino-monkey-final/src/components/ValidatorTest.js"],"names":["data","defaultValidators","Yup","i18next","flattenObject","obj","flattened","Object","keys","forEach","key","assign","default_validators","stepOne","stepTwo","stepSeparator","index","length","push","console","log","workedData","arrayData","res","map","element","value","validators","validator","values","parameters","code","generatePasswordValidator","name","passwordStrength","password","passwordMustMatch","result","string","required","t","matches","oneOf","ref","generateEmailValidator","email","emailValidator","generateStringValidator","min","minLength","max","maxLength","lettersOnly","lettersOnlyValidator","checkValidatorType","filter","startsWith","a","fname","targetLength","generateYupSchema","arr","JSON","stringify"],"mappings":"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","sourcesContent":["import data from \"../data/data.json\";\r\nimport defaultValidators from \"../data/default_validators.json\";\r\nimport * as Yup from \"yup\";\r\nimport i18next from \"i18next\";\r\n\r\nexport const flattenObject = (obj) => {\r\n  const flattened = {};\r\n\r\n  Object.keys(obj).forEach((key) => {\r\n    if (typeof obj[key] === \"object\" && obj[key] !== null) {\r\n      Object.assign(flattened, flattenObject(obj[key]));\r\n    } else {\r\n      flattened[key] = obj[key];\r\n    }\r\n  });\r\n\r\n  return flattened;\r\n};\r\nconst default_validators = defaultValidators;\r\nconst stepOne = [];\r\nconst stepTwo = [];\r\nconst stepSeparator = () => {\r\n  for (let index = 0; index < data.length; index++) {\r\n    if (index < 3) {\r\n      stepOne.push(data[index]);\r\n    } else {\r\n      stepTwo.push(data[index]);\r\n    }\r\n  }\r\n  console.log(\"step one: \", stepOne, \"step two: \", stepTwo);\r\n};\r\n\r\nexport const workedData = (arrayData) => {\r\n  let res = {};\r\n  res = arrayData.map((element) => {\r\n    console.log(\"initial element being worked: \", element);\r\n    let value = element?.validators?.map((validator) => ({\r\n      [validator.key]: Object.values(validator?.parameters)[0],\r\n    }));\r\n    console.log(\"preSPREAD value: \", value);\r\n    value = { ...value };\r\n    console.log(\"preFLAT value: \", value);\r\n    value = flattenObject(value);\r\n\r\n    console.log(\"code: \", element.code, \"value: \", value);\r\n    return {\r\n      [element.code]: value,\r\n    };\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const generatePasswordValidator = (element) => {\r\n  let name = Object.keys(element)[0];\r\n  let validator = {\r\n    passwordStrength:\r\n      element[name]?.passwordStrength ||\r\n      default_validators.password.passwordStrength,\r\n    passwordMustMatch:\r\n      element[name]?.passwordMustMatch ||\r\n      default_validators.password.passwordMustMatch,\r\n  };\r\n  let result = {\r\n    [Object.keys(element)[0]]: Yup.string()\r\n      .required(i18next.t(`errors.${name}.required`))\r\n      .matches(\r\n        validator.passwordStrength,\r\n        i18next.t(`errors.password.passwordStrength`)\r\n      )\r\n      .oneOf(\r\n        [Yup.ref(\"password\"), null],\r\n        i18next.t(`errors.password.passwordMatch`)\r\n      ),\r\n  };\r\n  console.log(result);\r\n  return result;\r\n};\r\nexport const generateEmailValidator = (element) => {\r\n  let name = Object.keys(element)[0];\r\n  let validator = {\r\n    email:\r\n      element[name]?.emailValidator || default_validators.emailValidator.email,\r\n  };\r\n  let result = {\r\n    [Object.keys(element)[0]]: Yup.string()\r\n      .required(i18next.t(`errors.${name}.required`))\r\n      .matches(validator.email, i18next.t(\"errors.email.email\")),\r\n  };\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nexport const generateStringValidator = (element) => {\r\n  console.log(\"INSIDE STRING VALIDATOR\");\r\n  let name = Object.keys(element)[0];\r\n  let validator = {\r\n    min: element[name]?.minLength || default_validators.string.length.min,\r\n    max: element[name]?.maxLength || default_validators.string.length.max,\r\n    lettersOnly:\r\n      element[name]?.lettersOnlyValidator ||\r\n      default_validators.string.lettersOnly,\r\n  };\r\n  let result = {\r\n    [Object.keys(element)[0]]: Yup.string()\r\n      .required(i18next.t(`errors.${name}.required`))\r\n      .min(`${validator.min}`, i18next.t(`errors.${name}.minLength`))\r\n      .max(`${validator.max}`, i18next.t(`errors.${name}.maxLength`))\r\n      .matches(validator.lettersOnly, i18next.t(\"errors.fname.letters_only\")),\r\n  };\r\n  console.log(result);\r\n  return result;\r\n};\r\n\r\nexport const checkValidatorType = (element) => {\r\n  if (Object.keys(element).filter((key) => key.startsWith(\"email\")).length) {\r\n    console.log(\"WENT INTO EMAIL\");\r\n    return generateEmailValidator(element);\r\n  } else if (\r\n    Object.keys(element).filter((key) => key.startsWith(\"password\")).length\r\n  ) {\r\n    return generatePasswordValidator(element);\r\n  } else {\r\n    console.log(\"ELSE TRIGGERED\");\r\n    return generateStringValidator(element);\r\n  }\r\n};\r\n\r\nlet a = [\r\n  { fname: { minLength: { targetLength: 2 } } },\r\n  { fname: { maxLength: { targetLength: 25 } } },\r\n];\r\n\r\nexport const generateYupSchema = (data) => {\r\n  let res = {};\r\n  let arr = data.map((element) => {\r\n    console.log(\"ELEMENT BEFORE PASSING TO CHECK: \", JSON.stringify(element));\r\n    return checkValidatorType(element);\r\n  });\r\n  arr.forEach((element) => (res = { ...res, ...element }));\r\n  return res;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}